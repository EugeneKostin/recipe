{"version":3,"file":"static/js/200.ec44fa4d.chunk.js","mappings":"iTAWaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAOC,UAAW,EAAxC,UACE,UAACC,EAAA,EAAD,CAAgBC,UAAWC,EAAAA,GAAYC,GAAE,kBAAaR,EAAOS,IAA7D,WACE,SAACC,EAAA,EAAD,CACEJ,UAAU,MACVK,OAAO,MACPC,MAAM,4BACNC,IAAI,YAEN,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKX,UAAU,MAAhD,SACGN,EAAOkB,SAEV,SAACC,EAAA,EAAD,CACEjB,GAAI,CACF,wBAAyB,CACvBkB,GAAI,IAHV,SAOGpB,EAAOqB,YAAYC,KAAI,SAACC,GAAD,OACtB,SAACC,EAAA,EAAD,CAEEC,MAAOF,EAAWL,MAClBQ,KAAK,QACLxB,GAAI,CACFyB,OAAQ,UACRC,QAAS,UACTC,SAAU,WACVC,WAAY,iBACZC,EAAG,EACH,YAAa,CACXC,QAAS,KACTC,MAAO,MACPtB,OAAQ,MACRiB,QAAS,eACTC,SAAU,WACVK,OAAQ,KAfPX,EAAWL,qB,oBCuChC,EAnCmB,WACjB,OAA8BiB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,+FACwBC,EAAAA,EAAAA,KADxB,cAGUC,SAAQ,SAACC,GAChBJ,GAAW,SAACK,GAAD,wBAAcA,GAAd,UAAsBjC,GAAIgC,EAAIhC,IAAOgC,EAAIE,gBAJvD,0CAAD,KASC,KAWD,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,WAAY,EAAGC,cAAe,EAA9C,SACGX,EAAQd,KAAI,SAACtB,GAAD,OACX,SAAC4C,EAAA,GAAD,CAAsBI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9C,UACE,SAACpD,EAAD,CAAYC,OAAQA,KADXA,EAAOS","sources":["components/RecipeCard.jsx","components/RecipeList.jsx"],"sourcesContent":["import {\r\n  Card,\r\n  Box,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Chip,\r\n} from '@mui/material';\r\nimport { CardActionArea } from '@mui/material';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n\r\nexport const RecipeCard = ({ recipe }) => {\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }} elevation={3}>\r\n      <CardActionArea component={RouterLink} to={`/recipe/${recipe.id}`}>\r\n        <CardMedia\r\n          component='img'\r\n          height='160'\r\n          image='/recipe/images/recipe.png'\r\n          alt='recipe'\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant='h5' component='div'>\r\n            {recipe.title}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              '& > :not(:last-child)': {\r\n                mr: 1,\r\n              },\r\n            }}\r\n          >\r\n            {recipe.ingredients.map((ingredient) => (\r\n              <Chip\r\n                key={ingredient.title}\r\n                label={ingredient.title}\r\n                size='small'\r\n                sx={{\r\n                  cursor: 'inherit',\r\n                  bgcolor: 'inherit',\r\n                  position: 'relative',\r\n                  fontWeight: 'fontWeightBold',\r\n                  p: 0,\r\n                  '&::before': {\r\n                    content: '\"\"',\r\n                    width: '70%',\r\n                    height: '1px',\r\n                    bgcolor: 'primary.main',\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                  },\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { RecipeCard } from './RecipeCard';\r\nimport { getAllDocuments } from '../API/firestore';\r\nimport { Grid } from '@mui/material';\r\n\r\nconst testRecipes = [\r\n  {\r\n    id: 1,\r\n    title: 'title 1',\r\n    products: [\r\n      {\r\n        name: 'potato',\r\n        quantity: 5,\r\n      },\r\n      {\r\n        name: 'tomato',\r\n        quantity: 3,\r\n      },\r\n    ],\r\n    description: '1 recipe desc',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'title 2',\r\n    products: [\r\n      {\r\n        name: 'carot',\r\n        quantity: 3,\r\n      },\r\n      {\r\n        name: 'onion',\r\n        quantity: 7,\r\n      },\r\n    ],\r\n    description: '2 recipe desc',\r\n  },\r\n];\r\n\r\nconst RecipeList = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const snapshot = await getAllDocuments();\r\n\r\n      snapshot.forEach((doc) => {\r\n        setRecipes((prev) => [...prev, { id: doc.id, ...doc.data() }]);\r\n      });\r\n    })();\r\n\r\n    // setRecipes(testRecipes);\r\n  }, []);\r\n\r\n  // const handleDelete = async (id) => {\r\n  // await fetch('http://localhost:8000/notes/' + id, {\r\n  //     method: 'DELETE'\r\n  // })\r\n  // const filteredRecipes = recipes.filter(recipe => recipe.id != id)\r\n  // setRecipes(filteredRecipes)\r\n  // }\r\n\r\n  return (\r\n    <Grid container rowSpacing={6} columnSpacing={4}>\r\n      {recipes.map((recipe) => (\r\n        <Grid key={recipe.id} item xs={12} md={4} lg={3}>\r\n          <RecipeCard recipe={recipe} />\r\n          {/* <RecipeCard recipe={recipe} handleDelete={handleDelete} /> */}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n"],"names":["RecipeCard","recipe","Card","sx","maxWidth","elevation","CardActionArea","component","RouterLink","to","id","CardMedia","height","image","alt","CardContent","Typography","gutterBottom","variant","title","Box","mr","ingredients","map","ingredient","Chip","label","size","cursor","bgcolor","position","fontWeight","p","content","width","bottom","useState","recipes","setRecipes","useEffect","getAllDocuments","forEach","doc","prev","data","Grid","container","rowSpacing","columnSpacing","item","xs","md","lg"],"sourceRoot":""}